# Percona Everest

This helm chart deploys Percona Everest.

Useful links:
- [Percona Everest Documentation](https://docs.percona.com/everest/index.html)
- [Percona Everest GitHub](https://github.com/percona/everest)

> :warning: Note: This chart is currently in technical preview.
Future releases could potentially introduce breaking changes, and we cannot promise a migration path. We do not recommend using this in production environment,
but if you do so, please be aware of the risks.

## Usage

### 1. Add the Percona Helm repository

```sh
helm repo add percona https://percona.github.io/percona-helm-charts/
helm repo update
```

### 2. Install Everest
```sh
helm install everest-core percona/everest \
    --namespace everest-system \
    --create-namespace
```

Notes:
* This command deploys the Everest components in the `everest-system` namespace. Currently, we do not support specifying a different namespace for Everest.
* Additionally, it also deploys a new namespace called `everest` for your databases and the database operators.
* If you prefer to manage your database namespace separately, you may set `dbNamespace.enabled=false`.
* You may override the name of the database namespace using the `dbNamespace.namespaceOverride` parameter.
* By default, all database operators are installed in your database namespace. You may override this by specifying one or more of the following: [`dbNamespace.pxc=false`, `dbNamespace.pg=false`, `dbNamespace.psmdb=false`].
* We currently do not support installation without the use of chart hooks. I.e, the use of `--no-hooks` is not supported during installation.

### 3. Retrieve the admin password

Once the installation is complete, you may retrieve the admin credentials using the following command:
```sh
kubectl get secret everest-accounts -n everest-system -o jsonpath='{.data.users\.yaml}' | base64 --decode  | yq '.admin.passwordHash'
```

You may open the Everest UI by port-forwarding the service to your local machine:

```sh
kubectl port-forward svc/everest -n everest-system 8080:8080
```

Notes:
* The default username to login to the Everest UI is `admin`.
* You may specify a different default admin password using `server.initialAdminPassword` parameter during installation.
* The default admin password is stored in plain text. It is highly recommended to update the password using `everestctl` to ensure that the passwords are hashed.

### 4. Deploy additional database namespaces

After Everest is successfully running, you may create additional database namespaces using the `everest-db-namespace` Helm chart.
If you had set `dbNamespaces.enabled=false` in the previous step, you may deploy a database namespaces using the following command:

```sh
helm install everest \
    percona/everest-db-namespace \
    --create-namespace \
    --namespace everest
```

Notes:
* By default, all database operators are installed in your database namespace. You may override this by specifying one or more of the following: [`dbNamespace.pxc=false`, `dbNamespace.pg=false`, `dbNamespace.psmdb=false`].
* We currently do not support installation without the use of chart hooks. I.e, the use of `--no-hooks` is not supported during installation.

### 5. Uninstall

#### 5.1 Uninstalling database namespaces

If you created any database namespaces (apart from the one installed by default), you must delete them first.

```sh
helm uninstall everest -n <your_db_namespace>
kubectl delete ns <your_db_namespace>
```

Notes:
* This runs a chart hook that cleans up your database resources first. While it is not recommended, you may skip this step by specifying `cleanupOnUninstall=false`.

#### 5.2 Uninstalling Everest

```sh
helm uninstall everest-core -n everest-system
kubectl delete ns everest-system
```

## Configuration

The following table shows the configurable parameters of the Percona Everest chart and their default values.

| Key | Type | Default | Description |
|-----|------|---------|-------------|
{{- range .Values }}
| {{ .Key }} | {{ .Type }} | {{ .Default }} | {{ .AutoDescription }} |
{{- end }}
